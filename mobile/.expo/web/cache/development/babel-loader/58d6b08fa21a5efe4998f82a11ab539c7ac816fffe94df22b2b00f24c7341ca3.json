{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport invariant from 'invariant';\nimport ReanimatedEventEmitter from \"../../ReanimatedEventEmitter\";\nimport { val } from \"../val\";\nimport AnimatedNode from \"./AnimatedNode\";\nvar NODE_MAPPING = new Map();\nfunction listener(data) {\n  var node = NODE_MAPPING.get(data.id);\n  node && node._callback(data.args);\n}\nvar AnimatedCall = function (_AnimatedNode) {\n  _inherits(AnimatedCall, _AnimatedNode);\n  var _super = _createSuper(AnimatedCall);\n  function AnimatedCall(args, jsFunction) {\n    var _this;\n    _classCallCheck(this, AnimatedCall);\n    invariant(args.every(function (el) {\n      return el instanceof AnimatedNode;\n    }), \"Reanimated: Animated.call node args should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");\n    _this = _super.call(this, {\n      type: 'call',\n      input: args\n    }, args);\n    _this._callback = jsFunction;\n    _this._args = args;\n    return _this;\n  }\n  _createClass(AnimatedCall, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedCall, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      _get(_getPrototypeOf(AnimatedCall.prototype), \"__attach\", this).call(this);\n      NODE_MAPPING.set(this.__nodeID, this);\n      if (NODE_MAPPING.size === 1) {\n        ReanimatedEventEmitter.addListener('onReanimatedCall', listener);\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      NODE_MAPPING.delete(this.__nodeID);\n      if (NODE_MAPPING.size === 0) {\n        ReanimatedEventEmitter.removeAllListeners('onReanimatedCall');\n      }\n      _get(_getPrototypeOf(AnimatedCall.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      this._callback(this._args.map(val));\n      return 0;\n    }\n  }]);\n  return AnimatedCall;\n}(AnimatedNode);\nexport function createAnimatedCall(args, func) {\n  return new AnimatedCall(args, func);\n}","map":{"version":3,"names":["invariant","ReanimatedEventEmitter","val","AnimatedNode","NODE_MAPPING","Map","listener","data","node","get","id","_callback","args","AnimatedCall","_AnimatedNode","_inherits","_super","_createSuper","jsFunction","_this","_classCallCheck","every","el","call","type","input","_args","_createClass","key","value","toString","__nodeID","__attach","_get","_getPrototypeOf","prototype","set","size","addListener","__detach","delete","removeAllListeners","__onEvaluate","map","createAnimatedCall","func"],"sources":["C:/Users/lucas_w_franco/Documents/gitclone/SA_2023_3B_SesiSenai_Storage/mobile/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCall.js"],"sourcesContent":["import invariant from 'invariant';\nimport ReanimatedEventEmitter from '../../ReanimatedEventEmitter';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\n\nconst NODE_MAPPING = new Map();\n\nfunction listener(data) {\n  const node = NODE_MAPPING.get(data.id);\n  node && node._callback(data.args);\n}\n\nclass AnimatedCall extends AnimatedNode {\n  _callback;\n  _args;\n\n  constructor(args, jsFunction) {\n    invariant(\n      args.every((el) => el instanceof AnimatedNode),\n      `Reanimated: Animated.call node args should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'call', input: args }, args);\n    this._callback = jsFunction;\n    this._args = args;\n  }\n\n  toString() {\n    return `AnimatedCall, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    super.__attach();\n    NODE_MAPPING.set(this.__nodeID, this);\n    if (NODE_MAPPING.size === 1) {\n      ReanimatedEventEmitter.addListener('onReanimatedCall', listener);\n    }\n  }\n\n  __detach() {\n    NODE_MAPPING.delete(this.__nodeID);\n    if (NODE_MAPPING.size === 0) {\n      ReanimatedEventEmitter.removeAllListeners('onReanimatedCall');\n    }\n    super.__detach();\n  }\n\n  __onEvaluate() {\n    this._callback(this._args.map(val));\n    return 0;\n  }\n}\n\nexport function createAnimatedCall(args, func) {\n  return new AnimatedCall(args, func);\n}\n"],"mappings":";;;;;;;;AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAOC,sBAAsB;AAC7B,SAASC,GAAG;AACZ,OAAOC,YAAY;AAEnB,IAAMC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE9B,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,IAAMC,IAAI,GAAGJ,YAAY,CAACK,GAAG,CAACF,IAAI,CAACG,EAAE,CAAC;EACtCF,IAAI,IAAIA,IAAI,CAACG,SAAS,CAACJ,IAAI,CAACK,IAAI,CAAC;AACnC;AAAC,IAEKC,YAAY,aAAAC,aAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAIhB,SAAAA,aAAYD,IAAI,EAAEM,UAAU,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,YAAA;IAC5Bb,SAAS,CACPY,IAAI,CAACS,KAAK,CAAC,UAACC,EAAE;MAAA,OAAKA,EAAE,YAAYnB,YAAY;IAAA,EAAC,wIAEhD,CAAC;IACDgB,KAAA,GAAAH,MAAA,CAAAO,IAAA,OAAM;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAEb;IAAK,CAAC,EAAEA,IAAI;IACzCO,KAAA,CAAKR,SAAS,GAAGO,UAAU;IAC3BC,KAAA,CAAKO,KAAK,GAAGd,IAAI;IAAC,OAAAO,KAAA;EACpB;EAACQ,YAAA,CAAAd,YAAA;IAAAe,GAAA;IAAAC,KAAA,EAED,SAAAC,SAAA,EAAW;MACT,8BAA4B,IAAI,CAACC,QAAQ;IAC3C;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,SAAA,EAAW;MACTC,IAAA,CAAAC,eAAA,CAAArB,YAAA,CAAAsB,SAAA,qBAAAZ,IAAA;MACAnB,YAAY,CAACgC,GAAG,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAAC;MACrC,IAAI3B,YAAY,CAACiC,IAAI,KAAK,CAAC,EAAE;QAC3BpC,sBAAsB,CAACqC,WAAW,CAAC,kBAAkB,EAAEhC,QAAQ,CAAC;MAClE;IACF;EAAC;IAAAsB,GAAA;IAAAC,KAAA,EAED,SAAAU,SAAA,EAAW;MACTnC,YAAY,CAACoC,MAAM,CAAC,IAAI,CAACT,QAAQ,CAAC;MAClC,IAAI3B,YAAY,CAACiC,IAAI,KAAK,CAAC,EAAE;QAC3BpC,sBAAsB,CAACwC,kBAAkB,CAAC,kBAAkB,CAAC;MAC/D;MACAR,IAAA,CAAAC,eAAA,CAAArB,YAAA,CAAAsB,SAAA,qBAAAZ,IAAA;IACF;EAAC;IAAAK,GAAA;IAAAC,KAAA,EAED,SAAAa,aAAA,EAAe;MACb,IAAI,CAAC/B,SAAS,CAAC,IAAI,CAACe,KAAK,CAACiB,GAAG,CAACzC,GAAG,CAAC,CAAC;MACnC,OAAO,CAAC;IACV;EAAC;EAAA,OAAAW,YAAA;AAAA,EArCwBV,YAAY;AAwCvC,OAAO,SAASyC,kBAAkBA,CAAChC,IAAI,EAAEiC,IAAI,EAAE;EAC7C,OAAO,IAAIhC,YAAY,CAACD,IAAI,EAAEiC,IAAI,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}