{"ast":null,"code":"import { runOnUI } from \"../core\";\nexport var prepareUIRegistry = runOnUI(function () {\n  var _f = function _f() {\n    var frameCallbackRegistry = {\n      frameCallbackRegistry: new Map(),\n      activeFrameCallbacks: new Set(),\n      previousFrameTimestamp: null,\n      runCallbacks: function runCallbacks() {\n        var _this = this;\n        var loop = function loop(timestamp) {\n          if (_this.previousFrameTimestamp === null) {\n            _this.previousFrameTimestamp = timestamp;\n          }\n          var delta = timestamp - _this.previousFrameTimestamp;\n          _this.activeFrameCallbacks.forEach(function (callbackId) {\n            var callbackDetails = _this.frameCallbackRegistry.get(callbackId);\n            var startTime = callbackDetails.startTime;\n            if (startTime === null) {\n              callbackDetails.startTime = timestamp;\n              callbackDetails.callback({\n                timestamp: timestamp,\n                timeSincePreviousFrame: null,\n                timeSinceFirstFrame: 0\n              });\n            } else {\n              callbackDetails.callback({\n                timestamp: timestamp,\n                timeSincePreviousFrame: delta,\n                timeSinceFirstFrame: timestamp - startTime\n              });\n            }\n          });\n          if (_this.activeFrameCallbacks.size > 0) {\n            _this.previousFrameTimestamp = timestamp;\n            requestAnimationFrame(loop);\n          } else {\n            _this.previousFrameTimestamp = null;\n          }\n        };\n        if (this.activeFrameCallbacks.size === 1) {\n          requestAnimationFrame(loop);\n        }\n      },\n      registerFrameCallback: function registerFrameCallback(callback, callbackId) {\n        this.frameCallbackRegistry.set(callbackId, {\n          callback: callback,\n          startTime: null\n        });\n      },\n      unregisterFrameCallback: function unregisterFrameCallback(callbackId) {\n        this.manageStateFrameCallback(callbackId, false);\n        this.frameCallbackRegistry.delete(callbackId);\n      },\n      manageStateFrameCallback: function manageStateFrameCallback(callbackId, state) {\n        if (callbackId === -1) {\n          return;\n        }\n        if (state) {\n          this.activeFrameCallbacks.add(callbackId);\n          this.runCallbacks();\n        } else {\n          var callback = this.frameCallbackRegistry.get(callbackId);\n          callback.startTime = null;\n          this.activeFrameCallbacks.delete(callbackId);\n        }\n      }\n    };\n    global._frameCallbackRegistry = frameCallbackRegistry;\n  };\n  _f._closure = {};\n  _f.asString = \"function _f(){const frameCallbackRegistry={frameCallbackRegistry:new Map(),activeFrameCallbacks:new Set(),previousFrameTimestamp:null,runCallbacks:function(){var _this=this;const loop=function(timestamp){if(_this.previousFrameTimestamp===null){_this.previousFrameTimestamp=timestamp;}const delta=timestamp-_this.previousFrameTimestamp;_this.activeFrameCallbacks.forEach(function(callbackId){const callbackDetails=_this.frameCallbackRegistry.get(callbackId);const{startTime:startTime}=callbackDetails;if(startTime===null){callbackDetails.startTime=timestamp;callbackDetails.callback({timestamp:timestamp,timeSincePreviousFrame:null,timeSinceFirstFrame:0});}else{callbackDetails.callback({timestamp:timestamp,timeSincePreviousFrame:delta,timeSinceFirstFrame:timestamp-startTime});}});if(_this.activeFrameCallbacks.size>0){_this.previousFrameTimestamp=timestamp;requestAnimationFrame(loop);}else{_this.previousFrameTimestamp=null;}};if(this.activeFrameCallbacks.size===1){requestAnimationFrame(loop);}},registerFrameCallback:function(callback,callbackId){this.frameCallbackRegistry.set(callbackId,{callback:callback,startTime:null});},unregisterFrameCallback:function(callbackId){this.manageStateFrameCallback(callbackId,false);this.frameCallbackRegistry.delete(callbackId);},manageStateFrameCallback:function(callbackId,state){if(callbackId===-1){return;}if(state){this.activeFrameCallbacks.add(callbackId);this.runCallbacks();}else{const callback=this.frameCallbackRegistry.get(callbackId);callback.startTime=null;this.activeFrameCallbacks.delete(callbackId);}}};global._frameCallbackRegistry=frameCallbackRegistry;}\";\n  _f.__workletHash = 3289807004391;\n  _f.__location = \"C:\\\\Users\\\\lucas_w_franco\\\\Documents\\\\gitclone\\\\SA_2023_3B_SesiSenai_Storage\\\\mobile\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\frameCallback\\\\FrameCallbackRegistryUI.js (2:41)\";\n  return _f;\n}());","map":{"version":3,"names":["runOnUI","prepareUIRegistry","_f","frameCallbackRegistry","Map","activeFrameCallbacks","Set","previousFrameTimestamp","runCallbacks","_this","loop","timestamp","delta","forEach","callbackId","callbackDetails","get","startTime","callback","timeSincePreviousFrame","timeSinceFirstFrame","size","requestAnimationFrame","registerFrameCallback","set","unregisterFrameCallback","manageStateFrameCallback","delete","state","add","global","_frameCallbackRegistry","_closure","asString","__workletHash","__location"],"sources":["C:/Users/lucas_w_franco/Documents/gitclone/SA_2023_3B_SesiSenai_Storage/mobile/node_modules/react-native-reanimated/lib/reanimated2/frameCallback/FrameCallbackRegistryUI.js"],"sourcesContent":["import { runOnUI } from '../core';\nexport const prepareUIRegistry = runOnUI(() => {\n    'worklet';\n    const frameCallbackRegistry = {\n        frameCallbackRegistry: new Map(),\n        activeFrameCallbacks: new Set(),\n        previousFrameTimestamp: null,\n        runCallbacks() {\n            const loop = (timestamp) => {\n                if (this.previousFrameTimestamp === null) {\n                    this.previousFrameTimestamp = timestamp;\n                }\n                const delta = timestamp - this.previousFrameTimestamp;\n                this.activeFrameCallbacks.forEach((callbackId) => {\n                    const callbackDetails = this.frameCallbackRegistry.get(callbackId);\n                    const { startTime } = callbackDetails;\n                    if (startTime === null) {\n                        // First frame\n                        callbackDetails.startTime = timestamp;\n                        callbackDetails.callback({\n                            timestamp,\n                            timeSincePreviousFrame: null,\n                            timeSinceFirstFrame: 0,\n                        });\n                    }\n                    else {\n                        // Next frame\n                        callbackDetails.callback({\n                            timestamp,\n                            timeSincePreviousFrame: delta,\n                            timeSinceFirstFrame: timestamp - startTime,\n                        });\n                    }\n                });\n                if (this.activeFrameCallbacks.size > 0) {\n                    this.previousFrameTimestamp = timestamp;\n                    requestAnimationFrame(loop);\n                }\n                else {\n                    this.previousFrameTimestamp = null;\n                }\n            };\n            // runCallback() should only be called after registering a callback,\n            // so if there is only one active callback, then it means that there were\n            // zero previously and the loop isn't running yet.\n            if (this.activeFrameCallbacks.size === 1) {\n                requestAnimationFrame(loop);\n            }\n        },\n        registerFrameCallback(callback, callbackId) {\n            this.frameCallbackRegistry.set(callbackId, {\n                callback: callback,\n                startTime: null,\n            });\n        },\n        unregisterFrameCallback(callbackId) {\n            this.manageStateFrameCallback(callbackId, false);\n            this.frameCallbackRegistry.delete(callbackId);\n        },\n        manageStateFrameCallback(callbackId, state) {\n            if (callbackId === -1) {\n                return;\n            }\n            if (state) {\n                this.activeFrameCallbacks.add(callbackId);\n                this.runCallbacks();\n            }\n            else {\n                const callback = this.frameCallbackRegistry.get(callbackId);\n                callback.startTime = null;\n                this.activeFrameCallbacks.delete(callbackId);\n            }\n        },\n    };\n    global._frameCallbackRegistry = frameCallbackRegistry;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}