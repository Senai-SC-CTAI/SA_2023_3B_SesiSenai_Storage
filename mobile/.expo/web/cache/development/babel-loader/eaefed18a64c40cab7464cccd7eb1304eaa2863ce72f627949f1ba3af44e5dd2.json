{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { isChromeDebugger, isJest, isWeb } from \"../PlatformChecker\";\nimport { SensorType } from \"../commonTypes\";\nvar JSReanimated = function () {\n  function JSReanimated() {\n    _classCallCheck(this, JSReanimated);\n    _defineProperty(this, \"native\", false);\n    _defineProperty(this, \"nextSensorId\", 0);\n    _defineProperty(this, \"sensors\", new Map());\n    _defineProperty(this, \"platform\", undefined);\n  }\n  _createClass(JSReanimated, [{\n    key: \"makeShareableClone\",\n    value: function makeShareableClone() {\n      throw new Error('[Reanimated] makeShareableClone should never be called in JSReanimated.');\n    }\n  }, {\n    key: \"installCoreFunctions\",\n    value: function installCoreFunctions(_callGuard, _valueUnpacker) {}\n  }, {\n    key: \"scheduleOnUI\",\n    value: function scheduleOnUI(worklet) {\n      requestAnimationFrame(worklet);\n    }\n  }, {\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(_eventHash, _eventHandler) {\n      return -1;\n    }\n  }, {\n    key: \"unregisterEventHandler\",\n    value: function unregisterEventHandler(_) {}\n  }, {\n    key: \"enableLayoutAnimations\",\n    value: function enableLayoutAnimations() {\n      if (isWeb()) {\n        console.warn('[Reanimated] Layout Animations are not supported on web yet.');\n      } else if (isChromeDebugger()) {\n        console.warn('[Reanimated] Layout Animations are no-ops when using Chrome Debugger.');\n      } else if (isJest()) {\n        console.warn('[Reanimated] Layout Animations are no-ops when using Jest.');\n      } else {\n        console.warn('[Reanimated] Layout Animations are not supported on this configuration.');\n      }\n    }\n  }, {\n    key: \"configureLayoutAnimation\",\n    value: function configureLayoutAnimation() {}\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor(sensorType, interval, _iosReferenceFrame, eventHandler) {\n      var _this = this;\n      if (this.platform === undefined) {\n        this.detectPlatform();\n      }\n      if (!(this.getSensorName(sensorType) in window)) {\n        console.warn('[Reanimated] Sensor is not available.' + (isWeb() && location.protocol !== 'https:' ? ' Make sure you use secure origin with `npx expo start --web --https`.' : '') + (this.platform === Platform.WEB_IOS ? ' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.' : ''));\n        return -1;\n      }\n      if (this.platform === undefined) {\n        this.detectPlatform();\n      }\n      var sensor = this.initializeSensor(sensorType, interval);\n      var callback;\n      if (sensorType === SensorType.ROTATION) {\n        callback = function callback() {\n          var _sensor$quaternion = _slicedToArray(sensor.quaternion, 4),\n            qw = _sensor$quaternion[0],\n            qx = _sensor$quaternion[1],\n            qy = _sensor$quaternion[2],\n            qz = _sensor$quaternion[3];\n          if (_this.platform === Platform.WEB_ANDROID) {\n            var _ref2 = [qz, -qy];\n            qy = _ref2[0];\n            qz = _ref2[1];\n          }\n          var yaw = Math.atan2(2.0 * (qy * qz + qw * qx), qw * qw - qx * qx - qy * qy + qz * qz);\n          var pitch = Math.sin(-2.0 * (qx * qz - qw * qy));\n          var roll = Math.atan2(2.0 * (qx * qy + qw * qz), qw * qw + qx * qx - qy * qy - qz * qz);\n          eventHandler({\n            qw: qw,\n            qx: qx,\n            qy: qy,\n            qz: qz,\n            yaw: yaw,\n            pitch: pitch,\n            roll: roll,\n            interfaceOrientation: 0\n          });\n        };\n      } else {\n        callback = function callback() {\n          var x = sensor.x,\n            y = sensor.y,\n            z = sensor.z;\n          var _ref3 = _this.platform === Platform.WEB_ANDROID ? [-x, -y, -z] : [x, y, z];\n          var _ref4 = _slicedToArray(_ref3, 3);\n          x = _ref4[0];\n          y = _ref4[1];\n          z = _ref4[2];\n          eventHandler({\n            x: x,\n            y: y,\n            z: z,\n            interfaceOrientation: 0\n          });\n        };\n      }\n      sensor.addEventListener('reading', callback);\n      sensor.start();\n      this.sensors.set(this.nextSensorId, sensor);\n      return this.nextSensorId++;\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor(id) {\n      var sensor = this.sensors.get(id);\n      if (sensor !== undefined) {\n        sensor.stop();\n        this.sensors.delete(id);\n      }\n    }\n  }, {\n    key: \"subscribeForKeyboardEvents\",\n    value: function subscribeForKeyboardEvents(_) {\n      if (isWeb()) {\n        console.warn('[Reanimated] useAnimatedKeyboard is not available on web yet.');\n      } else if (isChromeDebugger()) {\n        console.warn('[Reanimated] useAnimatedKeyboard is not available when using Chrome Debugger.');\n      } else if (isJest()) {\n        console.warn('[Reanimated] useAnimatedKeyboard is not available when using Jest.');\n      } else {\n        console.warn('[Reanimated] useAnimatedKeyboard is not available on this configuration.');\n      }\n      return -1;\n    }\n  }, {\n    key: \"unsubscribeFromKeyboardEvents\",\n    value: function unsubscribeFromKeyboardEvents(_) {}\n  }, {\n    key: \"initializeSensor\",\n    value: function initializeSensor(sensorType, interval) {\n      var config = interval <= 0 ? {\n        referenceFrame: 'device'\n      } : {\n        frequency: 1000 / interval\n      };\n      switch (sensorType) {\n        case SensorType.ACCELEROMETER:\n          return new window.Accelerometer(config);\n        case SensorType.GYROSCOPE:\n          return new window.Gyroscope(config);\n        case SensorType.GRAVITY:\n          return new window.GravitySensor(config);\n        case SensorType.MAGNETIC_FIELD:\n          return new window.Magnetometer(config);\n        case SensorType.ROTATION:\n          return new window.AbsoluteOrientationSensor(config);\n      }\n    }\n  }, {\n    key: \"getSensorName\",\n    value: function getSensorName(sensorType) {\n      switch (sensorType) {\n        case SensorType.ACCELEROMETER:\n          return 'Accelerometer';\n        case SensorType.GRAVITY:\n          return 'GravitySensor';\n        case SensorType.GYROSCOPE:\n          return 'Gyroscope';\n        case SensorType.MAGNETIC_FIELD:\n          return 'Magnetometer';\n        case SensorType.ROTATION:\n          return 'AbsoluteOrientationSensor';\n      }\n    }\n  }, {\n    key: \"detectPlatform\",\n    value: function detectPlatform() {\n      var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      if (userAgent === undefined) {\n        this.platform = Platform.UNKNOWN;\n      } else if (/iPad|iPhone|iPod/.test(userAgent)) {\n        this.platform = Platform.WEB_IOS;\n      } else if (/android/i.test(userAgent)) {\n        this.platform = Platform.WEB_ANDROID;\n      } else {\n        this.platform = Platform.WEB;\n      }\n    }\n  }, {\n    key: \"makeSynchronizedDataHolder\",\n    value: function makeSynchronizedDataHolder(_valueRef) {\n      throw new Error('[Reanimated] makeSynchronizedDataHolder is not available in JSReanimated.');\n    }\n  }, {\n    key: \"getDataSynchronously\",\n    value: function getDataSynchronously(_ref) {\n      throw new Error('[Reanimated] getDataSynchronously is not available in JSReanimated.');\n    }\n  }, {\n    key: \"getViewProp\",\n    value: function getViewProp(_viewTag, _propName, _callback) {\n      throw new Error('[Reanimated] getViewProp is not available in JSReanimated.');\n    }\n  }, {\n    key: \"configureProps\",\n    value: function configureProps() {\n      throw new Error('[Reanimated] configureProps is not available in JSReanimated.');\n    }\n  }]);\n  return JSReanimated;\n}();\nexport { JSReanimated as default };\nvar Platform = function (Platform) {\n  Platform[\"WEB_IOS\"] = \"web iOS\";\n  Platform[\"WEB_ANDROID\"] = \"web Android\";\n  Platform[\"WEB\"] = \"web\";\n  Platform[\"UNKNOWN\"] = \"unknown\";\n  return Platform;\n}(Platform || {});","map":{"version":3,"names":["isChromeDebugger","isJest","isWeb","SensorType","JSReanimated","_classCallCheck","_defineProperty","Map","undefined","_createClass","key","value","makeShareableClone","Error","installCoreFunctions","_callGuard","_valueUnpacker","scheduleOnUI","worklet","requestAnimationFrame","registerEventHandler","_eventHash","_eventHandler","unregisterEventHandler","_","enableLayoutAnimations","console","warn","configureLayoutAnimation","registerSensor","sensorType","interval","_iosReferenceFrame","eventHandler","_this","platform","detectPlatform","getSensorName","window","location","protocol","Platform","WEB_IOS","sensor","initializeSensor","callback","ROTATION","_sensor$quaternion","_slicedToArray","quaternion","qw","qx","qy","qz","WEB_ANDROID","_ref2","yaw","Math","atan2","pitch","sin","roll","interfaceOrientation","x","y","z","_ref3","_ref4","addEventListener","start","sensors","set","nextSensorId","unregisterSensor","id","get","stop","delete","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","config","referenceFrame","frequency","ACCELEROMETER","Accelerometer","GYROSCOPE","Gyroscope","GRAVITY","GravitySensor","MAGNETIC_FIELD","Magnetometer","AbsoluteOrientationSensor","userAgent","navigator","vendor","opera","UNKNOWN","test","WEB","makeSynchronizedDataHolder","_valueRef","getDataSynchronously","_ref","getViewProp","_viewTag","_propName","_callback","configureProps","default"],"sources":["C:\\Users\\tiago_m_joao\\Documents\\Taskone\\SA_2023_3B_SesiSenai_Storage-27285e3e84241711a7cad2455d66078938d0ca0f\\mobile\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\js-reanimated\\JSReanimated.ts"],"sourcesContent":["import { isChromeDebugger, isJest, isWeb } from '../PlatformChecker';\nimport type {\n  ShareableRef,\n  ShareableSyncDataHolderRef,\n  Value3D,\n  ValueRotation,\n} from '../commonTypes';\nimport { SensorType } from '../commonTypes';\nimport type { WebSensor } from './WebSensor';\n\nexport default class JSReanimated {\n  native = false;\n  nextSensorId = 0;\n  sensors = new Map<number, WebSensor>();\n  platform?: Platform = undefined;\n\n  makeShareableClone<T>(): ShareableRef<T> {\n    throw new Error(\n      '[Reanimated] makeShareableClone should never be called in JSReanimated.'\n    );\n  }\n\n  installCoreFunctions(\n    _callGuard: <T extends Array<unknown>, U>(\n      fn: (...args: T) => U,\n      ...args: T\n    ) => void,\n    _valueUnpacker: <T>(value: T) => T\n  ): void {\n    // noop\n  }\n\n  scheduleOnUI<T>(worklet: ShareableRef<T>) {\n    // @ts-ignore web implementation has still not been updated after the rewrite, this will be addressed once the web implementation updates are ready\n    requestAnimationFrame(worklet);\n  }\n\n  registerEventHandler<T>(\n    _eventHash: string,\n    _eventHandler: ShareableRef<T>\n  ): number {\n    // noop\n    return -1;\n  }\n\n  unregisterEventHandler(_: number): void {\n    // noop\n  }\n\n  enableLayoutAnimations() {\n    if (isWeb()) {\n      console.warn(\n        '[Reanimated] Layout Animations are not supported on web yet.'\n      );\n    } else if (isChromeDebugger()) {\n      console.warn(\n        '[Reanimated] Layout Animations are no-ops when using Chrome Debugger.'\n      );\n    } else if (isJest()) {\n      console.warn(\n        '[Reanimated] Layout Animations are no-ops when using Jest.'\n      );\n    } else {\n      console.warn(\n        '[Reanimated] Layout Animations are not supported on this configuration.'\n      );\n    }\n  }\n\n  configureLayoutAnimation() {\n    // no-op\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    interval: number,\n    _iosReferenceFrame: number,\n    eventHandler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    if (!(this.getSensorName(sensorType) in window)) {\n      // https://w3c.github.io/sensors/#secure-context\n      console.warn(\n        '[Reanimated] Sensor is not available.' +\n          (isWeb() && location.protocol !== 'https:'\n            ? ' Make sure you use secure origin with `npx expo start --web --https`.'\n            : '') +\n          (this.platform === Platform.WEB_IOS\n            ? ' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.'\n            : '')\n      );\n      return -1;\n    }\n\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    const sensor: WebSensor = this.initializeSensor(sensorType, interval);\n    let callback;\n    if (sensorType === SensorType.ROTATION) {\n      callback = () => {\n        let [qw, qx, qy, qz] = sensor.quaternion;\n\n        // Android sensors have a different coordinate system than iOS\n        if (this.platform === Platform.WEB_ANDROID) {\n          [qy, qz] = [qz, -qy];\n        }\n\n        // reference: https://stackoverflow.com/questions/5782658/extracting-yaw-from-a-quaternion\n        const yaw = Math.atan2(\n          2.0 * (qy * qz + qw * qx),\n          qw * qw - qx * qx - qy * qy + qz * qz\n        );\n        const pitch = Math.sin(-2.0 * (qx * qz - qw * qy));\n        const roll = Math.atan2(\n          2.0 * (qx * qy + qw * qz),\n          qw * qw + qx * qx - qy * qy - qz * qz\n        );\n        // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n        (eventHandler as any)({\n          qw,\n          qx,\n          qy,\n          qz,\n          yaw,\n          pitch,\n          roll,\n          interfaceOrientation: 0,\n        });\n      };\n    } else {\n      callback = () => {\n        let { x, y, z } = sensor;\n        [x, y, z] =\n          this.platform === Platform.WEB_ANDROID ? [-x, -y, -z] : [x, y, z];\n        // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n        (eventHandler as any)({ x, y, z, interfaceOrientation: 0 });\n      };\n    }\n    sensor.addEventListener('reading', callback);\n    sensor.start();\n\n    this.sensors.set(this.nextSensorId, sensor);\n    return this.nextSensorId++;\n  }\n\n  unregisterSensor(id: number): void {\n    const sensor: WebSensor | undefined = this.sensors.get(id);\n    if (sensor !== undefined) {\n      sensor.stop();\n      this.sensors.delete(id);\n    }\n  }\n\n  subscribeForKeyboardEvents(_: ShareableRef<number>): number {\n    if (isWeb()) {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available on web yet.'\n      );\n    } else if (isChromeDebugger()) {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available when using Chrome Debugger.'\n      );\n    } else if (isJest()) {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available when using Jest.'\n      );\n    } else {\n      console.warn(\n        '[Reanimated] useAnimatedKeyboard is not available on this configuration.'\n      );\n    }\n    return -1;\n  }\n\n  unsubscribeFromKeyboardEvents(_: number): void {\n    // noop\n  }\n\n  initializeSensor(sensorType: SensorType, interval: number): WebSensor {\n    const config =\n      interval <= 0\n        ? { referenceFrame: 'device' }\n        : { frequency: 1000 / interval };\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return new window.Accelerometer(config);\n      case SensorType.GYROSCOPE:\n        return new window.Gyroscope(config);\n      case SensorType.GRAVITY:\n        return new window.GravitySensor(config);\n      case SensorType.MAGNETIC_FIELD:\n        return new window.Magnetometer(config);\n      case SensorType.ROTATION:\n        return new window.AbsoluteOrientationSensor(config);\n    }\n  }\n\n  getSensorName(sensorType: SensorType): string {\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return 'Accelerometer';\n      case SensorType.GRAVITY:\n        return 'GravitySensor';\n      case SensorType.GYROSCOPE:\n        return 'Gyroscope';\n      case SensorType.MAGNETIC_FIELD:\n        return 'Magnetometer';\n      case SensorType.ROTATION:\n        return 'AbsoluteOrientationSensor';\n    }\n  }\n\n  detectPlatform() {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (userAgent === undefined) {\n      this.platform = Platform.UNKNOWN;\n    } else if (/iPad|iPhone|iPod/.test(userAgent)) {\n      this.platform = Platform.WEB_IOS;\n    } else if (/android/i.test(userAgent)) {\n      this.platform = Platform.WEB_ANDROID;\n    } else {\n      this.platform = Platform.WEB;\n    }\n  }\n\n  makeSynchronizedDataHolder<T>(\n    _valueRef: ShareableRef<T>\n  ): ShareableSyncDataHolderRef<T> {\n    throw new Error(\n      '[Reanimated] makeSynchronizedDataHolder is not available in JSReanimated.'\n    );\n  }\n\n  getDataSynchronously<T>(_ref: ShareableSyncDataHolderRef<T>): T {\n    throw new Error(\n      '[Reanimated] getDataSynchronously is not available in JSReanimated.'\n    );\n  }\n\n  getViewProp<T>(\n    _viewTag: string,\n    _propName: string,\n    _callback?: (result: T) => void\n  ): Promise<T> {\n    throw new Error(\n      '[Reanimated] getViewProp is not available in JSReanimated.'\n    );\n  }\n\n  configureProps() {\n    throw new Error(\n      '[Reanimated] configureProps is not available in JSReanimated.'\n    );\n  }\n}\n\nenum Platform {\n  WEB_IOS = 'web iOS',\n  WEB_ANDROID = 'web Android',\n  WEB = 'web',\n  UNKNOWN = 'unknown',\n}\n\ndeclare global {\n  interface Navigator {\n    userAgent?: string;\n    vendor?: string;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}