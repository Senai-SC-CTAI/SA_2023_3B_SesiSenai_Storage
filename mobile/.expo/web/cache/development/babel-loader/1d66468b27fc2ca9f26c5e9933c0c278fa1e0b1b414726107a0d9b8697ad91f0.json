{"ast":null,"code":"import { defineAnimation } from \"./util\";\nimport { withTiming } from \"./timing\";\nimport { ColorProperties } from \"../UpdateProps\";\nimport { processColor } from \"../Colors\";\nexport var resolvePath = function () {\n  var _f = function _f(obj, path) {\n    var keys = Array.isArray(path) ? path : [path];\n    return keys.reduce(function (acc, current) {\n      if (Array.isArray(acc) && typeof current === 'number') {\n        return acc[current];\n      } else if (typeof acc === 'object' && current in acc) {\n        return acc[current];\n      }\n      return undefined;\n    }, obj);\n  };\n  _f._closure = {};\n  _f.asString = \"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";\n  _f.__workletHash = 6802843237952;\n  _f.__location = \"C:\\\\Users\\\\Lucas Werpp Franco\\\\Documents\\\\Projetos-VScode\\\\SA_2023_3B_SesiSenai_Storage\\\\mobile\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (7:7)\";\n  return _f;\n}();\nexport var setPath = function () {\n  var _f = function _f(obj, path, value) {\n    var keys = Array.isArray(path) ? path : [path];\n    var currObj = obj;\n    for (var i = 0; i < keys.length - 1; i++) {\n      currObj = currObj;\n      if (!(keys[i] in currObj)) {\n        if (typeof keys[i + 1] === 'number') {\n          currObj[keys[i]] = [];\n        } else {\n          currObj[keys[i]] = {};\n        }\n      }\n      currObj = currObj[keys[i]];\n    }\n    currObj[keys[keys.length - 1]] = value;\n  };\n  _f._closure = {};\n  _f.asString = \"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!(keys[i]in currObj)){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";\n  _f.__workletHash = 17315725778859;\n  _f.__location = \"C:\\\\Users\\\\Lucas Werpp Franco\\\\Documents\\\\Projetos-VScode\\\\SA_2023_3B_SesiSenai_Storage\\\\mobile\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (20:7)\";\n  return _f;\n}();\nexport var withStyleAnimation = function () {\n  var _f = function _f(styleAnimations) {\n    return defineAnimation({}, function () {\n      var _f = function _f() {\n        var onFrame = function onFrame(animation, now) {\n          var stillGoing = false;\n          var entriesToCheck = [{\n            value: animation.styleAnimations,\n            path: []\n          }];\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n              for (var key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var currentStyleAnimation = currentEntry.value;\n              if (currentStyleAnimation.finished) {\n                continue;\n              }\n              var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n              if (finished) {\n                currentStyleAnimation.finished = true;\n                if (currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(true);\n                }\n              } else {\n                stillGoing = true;\n              }\n              if (ColorProperties.includes(currentEntry.path[0])) {\n                currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n              }\n              setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n            }\n          }\n          return !stillGoing;\n        };\n        var onStart = function onStart(animation, value, now, previousAnimation) {\n          var entriesToCheck = [{\n            value: styleAnimations,\n            path: []\n          }];\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n              for (var key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n              var prevVal = resolvePath(value, currentEntry.path);\n              if (prevAnimation && !prevVal) {\n                prevVal = prevAnimation.current;\n              }\n              if (prevVal === undefined) {\n                console.warn(\"Initial values for animation are missing for property \" + currentEntry.path.join('.'));\n              }\n              setPath(animation.current, currentEntry.path, prevVal);\n              var currentAnimation = void 0;\n              if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n                currentAnimation = withTiming(currentEntry.value, {\n                  duration: 0\n                });\n                setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n              } else {\n                currentAnimation = currentEntry.value;\n              }\n              currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n            }\n          }\n        };\n        var callback = function callback(finished) {\n          if (!finished) {\n            var animationsToCheck = [styleAnimations];\n            while (animationsToCheck.length > 0) {\n              var currentAnimation = animationsToCheck.pop();\n              if (Array.isArray(currentAnimation)) {\n                for (var element of currentAnimation) {\n                  animationsToCheck.push(element);\n                }\n              } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n                for (var value of Object.values(currentAnimation)) {\n                  animationsToCheck.push(value);\n                }\n              } else {\n                var currentStyleAnimation = currentAnimation;\n                if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(false);\n                }\n              }\n            }\n          }\n        };\n        return {\n          isHigherOrder: true,\n          onFrame: onFrame,\n          onStart: onStart,\n          current: {},\n          styleAnimations: styleAnimations,\n          callback: callback\n        };\n      };\n      _f._closure = {\n        ColorProperties: ColorProperties,\n        processColor: processColor,\n        setPath: setPath,\n        styleAnimations: styleAnimations,\n        resolvePath: resolvePath,\n        withTiming: withTiming\n      };\n      _f.asString = \"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(prevVal===undefined){console.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";\n      _f.__workletHash = 16217306184372;\n      _f.__location = \"C:\\\\Users\\\\Lucas Werpp Franco\\\\Documents\\\\Projetos-VScode\\\\SA_2023_3B_SesiSenai_Storage\\\\mobile\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (43:31)\";\n      return _f;\n    }());\n  };\n  _f._closure = {\n    defineAnimation: defineAnimation,\n    ColorProperties: ColorProperties,\n    processColor: processColor,\n    setPath: setPath,\n    resolvePath: resolvePath,\n    withTiming: withTiming\n  };\n  _f.asString = \"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}if(prevVal===undefined){console.warn(\\\"Initial values for animation are missing for property \\\"+currentEntry.path.join('.'));}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";\n  _f.__workletHash = 5859144058646;\n  _f.__location = \"C:\\\\Users\\\\Lucas Werpp Franco\\\\Documents\\\\Projetos-VScode\\\\SA_2023_3B_SesiSenai_Storage\\\\mobile\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (41:7)\";\n  return _f;\n}();","map":{"version":3,"names":["defineAnimation","withTiming","ColorProperties","processColor","resolvePath","_f","obj","path","keys","Array","isArray","reduce","acc","current","undefined","_closure","asString","__workletHash","__location","setPath","value","currObj","i","length","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","key","Object","currentStyleAnimation","finished","callback","includes","onStart","previousAnimation","prevAnimation","prevVal","console","warn","join","currentAnimation","duration","animationsToCheck","element","values","isHigherOrder"],"sources":["C:/Users/Lucas Werpp Franco/Documents/Projetos-VScode/SA_2023_3B_SesiSenai_Storage/mobile/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"sourcesContent":["import { defineAnimation } from './util';\nimport { withTiming } from './timing';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors';\n// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nexport function resolvePath(obj, path) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    return keys.reduce((acc, current) => {\n        if (Array.isArray(acc) && typeof current === 'number') {\n            return acc[current];\n        }\n        else if (typeof acc === 'object' && current in acc) {\n            return acc[current];\n        }\n        return undefined;\n    }, obj);\n}\nexport function setPath(obj, path, value) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    let currObj = obj;\n    for (let i = 0; i < keys.length - 1; i++) {\n        // creates entry if there isn't one\n        currObj = currObj;\n        if (!(keys[i] in currObj)) {\n            // if next key is a number create an array\n            if (typeof keys[i + 1] === 'number') {\n                currObj[keys[i]] = [];\n            }\n            else {\n                currObj[keys[i]] = {};\n            }\n        }\n        currObj = currObj[keys[i]];\n    }\n    currObj[keys[keys.length - 1]] =\n        value;\n}\nexport function withStyleAnimation(styleAnimations) {\n    'worklet';\n    return defineAnimation({}, () => {\n        'worklet';\n        const onFrame = (animation, now) => {\n            let stillGoing = false;\n            const entriesToCheck = [\n                { value: animation.styleAnimations, path: [] },\n            ];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onFrame === undefined) {\n                    // nested object\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const currentStyleAnimation = currentEntry.value;\n                    if (currentStyleAnimation.finished) {\n                        continue;\n                    }\n                    const finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n                    if (finished) {\n                        currentStyleAnimation.finished = true;\n                        if (currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(true);\n                        }\n                    }\n                    else {\n                        stillGoing = true;\n                    }\n                    if (ColorProperties.includes(currentEntry.path[0])) {\n                        currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n                    }\n                    setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n                }\n            }\n            return !stillGoing;\n        };\n        const onStart = (animation, value, now, previousAnimation) => {\n            const entriesToCheck = [{ value: styleAnimations, path: [] }];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onStart === undefined) {\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n                    let prevVal = resolvePath(value, currentEntry.path);\n                    if (prevAnimation && !prevVal) {\n                        prevVal = prevAnimation.current;\n                    }\n                    if (prevVal === undefined) {\n                        console.warn(`Initial values for animation are missing for property ${currentEntry.path.join('.')}`);\n                    }\n                    setPath(animation.current, currentEntry.path, prevVal);\n                    let currentAnimation;\n                    if (typeof currentEntry.value !== 'object' ||\n                        !currentEntry.value.onStart) {\n                        currentAnimation = withTiming(currentEntry.value, { duration: 0 });\n                        setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n                    }\n                    else {\n                        currentAnimation = currentEntry.value;\n                    }\n                    currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n                }\n            }\n        };\n        const callback = (finished) => {\n            if (!finished) {\n                const animationsToCheck = [\n                    styleAnimations,\n                ];\n                while (animationsToCheck.length > 0) {\n                    const currentAnimation = animationsToCheck.pop();\n                    if (Array.isArray(currentAnimation)) {\n                        for (const element of currentAnimation) {\n                            animationsToCheck.push(element);\n                        }\n                    }\n                    else if (typeof currentAnimation === 'object' &&\n                        currentAnimation.onStart === undefined) {\n                        for (const value of Object.values(currentAnimation)) {\n                            animationsToCheck.push(value);\n                        }\n                    }\n                    else {\n                        const currentStyleAnimation = currentAnimation;\n                        if (!currentStyleAnimation.finished &&\n                            currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(false);\n                        }\n                    }\n                }\n            }\n        };\n        return {\n            isHigherOrder: true,\n            onFrame,\n            onStart,\n            current: {},\n            styleAnimations,\n            callback,\n        };\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}