{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport MapperRegistry from \"./MapperRegistry\";\nimport Mapper from \"./Mapper\";\nimport MutableValue from \"./MutableValue\";\nimport { NativeReanimated } from \"../NativeReanimated/NativeReanimated\";\nimport { isJest } from \"../PlatformChecker\";\nvar JSReanimated = function (_NativeReanimated) {\n  _inherits(JSReanimated, _NativeReanimated);\n  var _super = _createSuper(JSReanimated);\n  function JSReanimated() {\n    var _this;\n    _classCallCheck(this, JSReanimated);\n    _this = _super.call(this, false);\n    _this._valueSetter = undefined;\n    _this._renderRequested = false;\n    _this._mapperRegistry = new MapperRegistry(_assertThisInitialized(_this));\n    _this._frames = [];\n    if (isJest()) {\n      _this.timeProvider = {\n        now: function now() {\n          return global.ReanimatedDataMock.now();\n        }\n      };\n    } else {\n      _this.timeProvider = {\n        now: function now() {\n          return window.performance.now();\n        }\n      };\n    }\n    return _this;\n  }\n  _createClass(JSReanimated, [{\n    key: \"pushFrame\",\n    value: function pushFrame(frame) {\n      this._frames.push(frame);\n      this.maybeRequestRender();\n    }\n  }, {\n    key: \"getTimestamp\",\n    value: function getTimestamp() {\n      return this.timeProvider.now();\n    }\n  }, {\n    key: \"maybeRequestRender\",\n    value: function maybeRequestRender() {\n      var _this2 = this;\n      if (!this._renderRequested) {\n        this._renderRequested = true;\n        requestAnimationFrame(function (_timestampMs) {\n          _this2._renderRequested = false;\n          _this2._onRender(_this2.getTimestamp());\n        });\n      }\n    }\n  }, {\n    key: \"_onRender\",\n    value: function _onRender(timestampMs) {\n      this._mapperRegistry.execute();\n      var frames = _toConsumableArray(this._frames);\n      this._frames = [];\n      for (var i = 0, len = frames.length; i < len; ++i) {\n        frames[i](timestampMs);\n      }\n      if (this._mapperRegistry.needRunOnRender) {\n        this._mapperRegistry.execute();\n      }\n    }\n  }, {\n    key: \"installCoreFunctions\",\n    value: function installCoreFunctions(valueSetter) {\n      this._valueSetter = valueSetter;\n    }\n  }, {\n    key: \"makeShareable\",\n    value: function makeShareable(value) {\n      return value;\n    }\n  }, {\n    key: \"makeMutable\",\n    value: function makeMutable(value) {\n      return new MutableValue(value, this._valueSetter);\n    }\n  }, {\n    key: \"makeRemote\",\n    value: function makeRemote() {\n      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return object;\n    }\n  }, {\n    key: \"startMapper\",\n    value: function startMapper(mapper) {\n      var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var instance = new Mapper(this, mapper, inputs, outputs);\n      var mapperId = this._mapperRegistry.startMapper(instance);\n      this.maybeRequestRender();\n      return mapperId;\n    }\n  }, {\n    key: \"stopMapper\",\n    value: function stopMapper(mapperId) {\n      this._mapperRegistry.stopMapper(mapperId);\n    }\n  }, {\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(_, __) {\n      return '';\n    }\n  }, {\n    key: \"unregisterEventHandler\",\n    value: function unregisterEventHandler(_) {}\n  }, {\n    key: \"enableLayoutAnimations\",\n    value: function enableLayoutAnimations() {\n      console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\n    }\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor() {\n      console.warn('[Reanimated] useAnimatedSensor is not available on web yet.');\n      return -1;\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor() {}\n  }, {\n    key: \"jestResetModule\",\n    value: function jestResetModule() {\n      if (isJest()) {\n        this._renderRequested = false;\n      } else {\n        throw Error('This method can be only use in Jest testing.');\n      }\n    }\n  }, {\n    key: \"subscribeForKeyboardEvents\",\n    value: function subscribeForKeyboardEvents(_) {\n      console.warn('[Reanimated] useAnimatedKeyboard is not available on web yet.');\n      return -1;\n    }\n  }, {\n    key: \"unsubscribeFromKeyboardEvents\",\n    value: function unsubscribeFromKeyboardEvents(_) {}\n  }]);\n  return JSReanimated;\n}(NativeReanimated);\nexport { JSReanimated as default };","map":{"version":3,"names":["MapperRegistry","Mapper","MutableValue","NativeReanimated","isJest","JSReanimated","_NativeReanimated","_inherits","_super","_createSuper","_this","_classCallCheck","call","_valueSetter","undefined","_renderRequested","_mapperRegistry","_assertThisInitialized","_frames","timeProvider","now","global","ReanimatedDataMock","window","performance","_createClass","key","value","pushFrame","frame","push","maybeRequestRender","getTimestamp","_this2","requestAnimationFrame","_timestampMs","_onRender","timestampMs","execute","frames","_toConsumableArray","i","len","length","needRunOnRender","installCoreFunctions","valueSetter","makeShareable","makeMutable","makeRemote","object","arguments","startMapper","mapper","inputs","outputs","instance","mapperId","stopMapper","registerEventHandler","_","__","unregisterEventHandler","enableLayoutAnimations","console","warn","registerSensor","unregisterSensor","jestResetModule","Error","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","default"],"sources":["C:/Users/02108980032/Documents/gitclone/SA - App/SA_2023_3B_SesiSenai_Storage/mobile/node_modules/react-native-reanimated/lib/reanimated2/js-reanimated/JSReanimated.js"],"sourcesContent":["import MapperRegistry from './MapperRegistry';\nimport Mapper from './Mapper';\nimport MutableValue from './MutableValue';\nimport { NativeReanimated } from '../NativeReanimated/NativeReanimated';\nimport { isJest } from '../PlatformChecker';\nexport default class JSReanimated extends NativeReanimated {\n    constructor() {\n        super(false);\n        this._valueSetter = undefined;\n        this._renderRequested = false;\n        this._mapperRegistry = new MapperRegistry(this);\n        this._frames = [];\n        if (isJest()) {\n            this.timeProvider = { now: () => global.ReanimatedDataMock.now() };\n        }\n        else {\n            this.timeProvider = { now: () => window.performance.now() };\n        }\n    }\n    pushFrame(frame) {\n        this._frames.push(frame);\n        this.maybeRequestRender();\n    }\n    getTimestamp() {\n        return this.timeProvider.now();\n    }\n    maybeRequestRender() {\n        if (!this._renderRequested) {\n            this._renderRequested = true;\n            requestAnimationFrame((_timestampMs) => {\n                this._renderRequested = false;\n                this._onRender(this.getTimestamp());\n            });\n        }\n    }\n    _onRender(timestampMs) {\n        this._mapperRegistry.execute();\n        const frames = [...this._frames];\n        this._frames = [];\n        for (let i = 0, len = frames.length; i < len; ++i) {\n            frames[i](timestampMs);\n        }\n        if (this._mapperRegistry.needRunOnRender) {\n            this._mapperRegistry.execute();\n        }\n    }\n    installCoreFunctions(valueSetter) {\n        this._valueSetter = valueSetter;\n    }\n    makeShareable(value) {\n        return value;\n    }\n    makeMutable(value) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return new MutableValue(value, this._valueSetter);\n    }\n    makeRemote(object = {}) {\n        return object;\n    }\n    startMapper(mapper, inputs = [], outputs = []) {\n        const instance = new Mapper(this, mapper, inputs, outputs);\n        const mapperId = this._mapperRegistry.startMapper(instance);\n        this.maybeRequestRender();\n        return mapperId;\n    }\n    stopMapper(mapperId) {\n        this._mapperRegistry.stopMapper(mapperId);\n    }\n    registerEventHandler(_, __) {\n        // noop\n        return '';\n    }\n    unregisterEventHandler(_) {\n        // noop\n    }\n    enableLayoutAnimations() {\n        console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\n    }\n    registerSensor() {\n        console.warn('[Reanimated] useAnimatedSensor is not available on web yet.');\n        return -1;\n    }\n    unregisterSensor() {\n        // noop\n    }\n    jestResetModule() {\n        if (isJest()) {\n            /**\n             * If someone used timers to stop animation before the end,\n             * then _renderRequested was set as true\n             * and any new update from another test wasn't applied.\n             */\n            this._renderRequested = false;\n        }\n        else {\n            throw Error('This method can be only use in Jest testing.');\n        }\n    }\n    subscribeForKeyboardEvents(_) {\n        console.warn('[Reanimated] useAnimatedKeyboard is not available on web yet.');\n        return -1;\n    }\n    unsubscribeFromKeyboardEvents(_) {\n        // noop\n    }\n}\n"],"mappings":";;;;;;;;;AAAA,OAAOA,cAAc;AACrB,OAAOC,MAAM;AACb,OAAOC,YAAY;AACnB,SAASC,gBAAgB;AACzB,SAASC,MAAM;AAA6B,IACvBC,YAAY,aAAAC,iBAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,iBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAC7B,SAAAA,aAAA,EAAc;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,YAAA;IACVK,KAAA,GAAAF,MAAA,CAAAI,IAAA,OAAM,KAAK;IACXF,KAAA,CAAKG,YAAY,GAAGC,SAAS;IAC7BJ,KAAA,CAAKK,gBAAgB,GAAG,KAAK;IAC7BL,KAAA,CAAKM,eAAe,GAAG,IAAIhB,cAAc,CAAAiB,sBAAA,CAAAP,KAAA,CAAK,CAAC;IAC/CA,KAAA,CAAKQ,OAAO,GAAG,EAAE;IACjB,IAAId,MAAM,CAAC,CAAC,EAAE;MACVM,KAAA,CAAKS,YAAY,GAAG;QAAEC,GAAG,EAAE,SAAAA,IAAA;UAAA,OAAMC,MAAM,CAACC,kBAAkB,CAACF,GAAG,CAAC,CAAC;QAAA;MAAC,CAAC;IACtE,CAAC,MACI;MACDV,KAAA,CAAKS,YAAY,GAAG;QAAEC,GAAG,EAAE,SAAAA,IAAA;UAAA,OAAMG,MAAM,CAACC,WAAW,CAACJ,GAAG,CAAC,CAAC;QAAA;MAAC,CAAC;IAC/D;IAAC,OAAAV,KAAA;EACL;EAACe,YAAA,CAAApB,YAAA;IAAAqB,GAAA;IAAAC,KAAA,EACD,SAAAC,UAAUC,KAAK,EAAE;MACb,IAAI,CAACX,OAAO,CAACY,IAAI,CAACD,KAAK,CAAC;MACxB,IAAI,CAACE,kBAAkB,CAAC,CAAC;IAC7B;EAAC;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAK,aAAA,EAAe;MACX,OAAO,IAAI,CAACb,YAAY,CAACC,GAAG,CAAC,CAAC;IAClC;EAAC;IAAAM,GAAA;IAAAC,KAAA,EACD,SAAAI,mBAAA,EAAqB;MAAA,IAAAE,MAAA;MACjB,IAAI,CAAC,IAAI,CAAClB,gBAAgB,EAAE;QACxB,IAAI,CAACA,gBAAgB,GAAG,IAAI;QAC5BmB,qBAAqB,CAAC,UAACC,YAAY,EAAK;UACpCF,MAAI,CAAClB,gBAAgB,GAAG,KAAK;UAC7BkB,MAAI,CAACG,SAAS,CAACH,MAAI,CAACD,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC;MACN;IACJ;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAS,UAAUC,WAAW,EAAE;MACnB,IAAI,CAACrB,eAAe,CAACsB,OAAO,CAAC,CAAC;MAC9B,IAAMC,MAAM,GAAAC,kBAAA,CAAO,IAAI,CAACtB,OAAO,CAAC;MAChC,IAAI,CAACA,OAAO,GAAG,EAAE;MACjB,KAAK,IAAIuB,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGH,MAAM,CAACI,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;QAC/CF,MAAM,CAACE,CAAC,CAAC,CAACJ,WAAW,CAAC;MAC1B;MACA,IAAI,IAAI,CAACrB,eAAe,CAAC4B,eAAe,EAAE;QACtC,IAAI,CAAC5B,eAAe,CAACsB,OAAO,CAAC,CAAC;MAClC;IACJ;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EACD,SAAAkB,qBAAqBC,WAAW,EAAE;MAC9B,IAAI,CAACjC,YAAY,GAAGiC,WAAW;IACnC;EAAC;IAAApB,GAAA;IAAAC,KAAA,EACD,SAAAoB,cAAcpB,KAAK,EAAE;MACjB,OAAOA,KAAK;IAChB;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAqB,YAAYrB,KAAK,EAAE;MAEf,OAAO,IAAIzB,YAAY,CAACyB,KAAK,EAAE,IAAI,CAACd,YAAY,CAAC;IACrD;EAAC;IAAAa,GAAA;IAAAC,KAAA,EACD,SAAAsB,WAAA,EAAwB;MAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAArC,SAAA,GAAAqC,SAAA,MAAG,CAAC,CAAC;MAClB,OAAOD,MAAM;IACjB;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAyB,YAAYC,MAAM,EAA6B;MAAA,IAA3BC,MAAM,GAAAH,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAArC,SAAA,GAAAqC,SAAA,MAAG,EAAE;MAAA,IAAEI,OAAO,GAAAJ,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAArC,SAAA,GAAAqC,SAAA,MAAG,EAAE;MACzC,IAAMK,QAAQ,GAAG,IAAIvD,MAAM,CAAC,IAAI,EAAEoD,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;MAC1D,IAAME,QAAQ,GAAG,IAAI,CAACzC,eAAe,CAACoC,WAAW,CAACI,QAAQ,CAAC;MAC3D,IAAI,CAACzB,kBAAkB,CAAC,CAAC;MACzB,OAAO0B,QAAQ;IACnB;EAAC;IAAA/B,GAAA;IAAAC,KAAA,EACD,SAAA+B,WAAWD,QAAQ,EAAE;MACjB,IAAI,CAACzC,eAAe,CAAC0C,UAAU,CAACD,QAAQ,CAAC;IAC7C;EAAC;IAAA/B,GAAA;IAAAC,KAAA,EACD,SAAAgC,qBAAqBC,CAAC,EAAEC,EAAE,EAAE;MAExB,OAAO,EAAE;IACb;EAAC;IAAAnC,GAAA;IAAAC,KAAA,EACD,SAAAmC,uBAAuBF,CAAC,EAAE,CAE1B;EAAC;IAAAlC,GAAA;IAAAC,KAAA,EACD,SAAAoC,uBAAA,EAAyB;MACrBC,OAAO,CAACC,IAAI,CAAC,kEAAkE,CAAC;IACpF;EAAC;IAAAvC,GAAA;IAAAC,KAAA,EACD,SAAAuC,eAAA,EAAiB;MACbF,OAAO,CAACC,IAAI,CAAC,6DAA6D,CAAC;MAC3E,OAAO,CAAC,CAAC;IACb;EAAC;IAAAvC,GAAA;IAAAC,KAAA,EACD,SAAAwC,iBAAA,EAAmB,CAEnB;EAAC;IAAAzC,GAAA;IAAAC,KAAA,EACD,SAAAyC,gBAAA,EAAkB;MACd,IAAIhE,MAAM,CAAC,CAAC,EAAE;QAMV,IAAI,CAACW,gBAAgB,GAAG,KAAK;MACjC,CAAC,MACI;QACD,MAAMsD,KAAK,CAAC,8CAA8C,CAAC;MAC/D;IACJ;EAAC;IAAA3C,GAAA;IAAAC,KAAA,EACD,SAAA2C,2BAA2BV,CAAC,EAAE;MAC1BI,OAAO,CAACC,IAAI,CAAC,+DAA+D,CAAC;MAC7E,OAAO,CAAC,CAAC;IACb;EAAC;IAAAvC,GAAA;IAAAC,KAAA,EACD,SAAA4C,8BAA8BX,CAAC,EAAE,CAEjC;EAAC;EAAA,OAAAvD,YAAA;AAAA,EAnGqCF,gBAAgB;AAAA,SAArCE,YAAY,IAAAmE,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}