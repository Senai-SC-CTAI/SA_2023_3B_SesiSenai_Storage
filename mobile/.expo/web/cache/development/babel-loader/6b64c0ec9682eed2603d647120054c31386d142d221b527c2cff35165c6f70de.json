{"ast":null,"code":"export var LayoutAnimationType = function (LayoutAnimationType) {\n  LayoutAnimationType[LayoutAnimationType[\"ENTERING\"] = 1] = \"ENTERING\";\n  LayoutAnimationType[LayoutAnimationType[\"EXITING\"] = 2] = \"EXITING\";\n  LayoutAnimationType[LayoutAnimationType[\"LAYOUT\"] = 3] = \"LAYOUT\";\n  LayoutAnimationType[LayoutAnimationType[\"SHARED_ELEMENT_TRANSITION\"] = 4] = \"SHARED_ELEMENT_TRANSITION\";\n  LayoutAnimationType[LayoutAnimationType[\"SHARED_ELEMENT_TRANSITION_PROGRESS\"] = 5] = \"SHARED_ELEMENT_TRANSITION_PROGRESS\";\n  return LayoutAnimationType;\n}({});\nexport var SharedTransitionType = function (SharedTransitionType) {\n  SharedTransitionType[\"ANIMATION\"] = \"animation\";\n  SharedTransitionType[\"PROGRESS_ANIMATION\"] = \"progressAnimation\";\n  return SharedTransitionType;\n}({});","map":{"version":3,"names":["LayoutAnimationType","SharedTransitionType"],"sources":["C:\\Users\\tiago_m_joao\\Documents\\Taskone\\teste\\SA_2023_3B_SesiSenai_Storage\\mobile\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\animationBuilder\\commonTypes.ts"],"sourcesContent":["import type { EasingFunction } from '../../Easing';\nimport type { StyleProps } from '../../commonTypes';\n\nexport interface KeyframeProps extends StyleProps {\n  easing?: EasingFunction;\n  [key: string]: any;\n}\n\nexport type LayoutAnimation = {\n  initialValues: StyleProps;\n  animations: StyleProps;\n  callback?: (finished: boolean) => void;\n};\n\nexport type AnimationFunction = (a?: any, b?: any, c?: any) => any; // this is just a temporary mock\n\nexport interface EntryAnimationsValues {\n  targetOriginX: number;\n  targetOriginY: number;\n  targetWidth: number;\n  targetHeight: number;\n  targetGlobalOriginX: number;\n  targetGlobalOriginY: number;\n  windowWidth: number;\n  windowHeight: number;\n}\n\nexport interface ExitAnimationsValues {\n  currentOriginX: number;\n  currentOriginY: number;\n  currentWidth: number;\n  currentHeight: number;\n  currentGlobalOriginX: number;\n  currentGlobalOriginY: number;\n  windowWidth: number;\n  windowHeight: number;\n}\n\nexport type EntryExitAnimationFunction =\n  | ((targetValues: EntryAnimationsValues) => LayoutAnimation)\n  | ((targetValues: ExitAnimationsValues) => LayoutAnimation)\n  | (() => LayoutAnimation);\n\nexport type AnimationConfigFunction<T> = (targetValues: T) => LayoutAnimation;\n\nexport interface LayoutAnimationsValues {\n  [key: string]: number | number[];\n  currentOriginX: number;\n  currentOriginY: number;\n  currentWidth: number;\n  currentHeight: number;\n  currentGlobalOriginX: number;\n  currentGlobalOriginY: number;\n  targetOriginX: number;\n  targetOriginY: number;\n  targetWidth: number;\n  targetHeight: number;\n  targetGlobalOriginX: number;\n  targetGlobalOriginY: number;\n  windowWidth: number;\n  windowHeight: number;\n}\n\nexport interface SharedTransitionAnimationsValues\n  extends LayoutAnimationsValues {\n  currentTransformMatrix: number[];\n  targetTransformMatrix: number[];\n}\n\nexport type SharedTransitionAnimationsFunction = (\n  values: SharedTransitionAnimationsValues\n) => LayoutAnimation;\n\nexport enum LayoutAnimationType {\n  ENTERING = 1,\n  EXITING = 2,\n  LAYOUT = 3,\n  SHARED_ELEMENT_TRANSITION = 4,\n  SHARED_ELEMENT_TRANSITION_PROGRESS = 5,\n}\n\nexport type LayoutAnimationFunction = (\n  targetValues: LayoutAnimationsValues\n) => LayoutAnimation;\n\nexport type LayoutAnimationStartFunction = (\n  tag: number,\n  type: LayoutAnimationType,\n  yogaValues: LayoutAnimationsValues,\n  config: LayoutAnimationFunction\n) => void;\n\nexport interface ILayoutAnimationBuilder {\n  build: () => LayoutAnimationFunction;\n}\n\nexport interface BaseLayoutAnimationConfig {\n  duration?: number;\n  easing?: EasingFunction;\n  type?: AnimationFunction;\n  damping?: number;\n  dampingRatio?: number;\n  mass?: number;\n  stiffness?: number;\n  overshootClamping?: number;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n}\n\nexport interface BaseBuilderAnimationConfig extends BaseLayoutAnimationConfig {\n  rotate?: number | string;\n}\n\nexport type LayoutAnimationAndConfig = [\n  AnimationFunction,\n  BaseBuilderAnimationConfig\n];\n\nexport interface IEntryExitAnimationBuilder {\n  build: () => EntryExitAnimationFunction;\n}\n\nexport interface IEntryAnimationBuilder {\n  build: () => AnimationConfigFunction<EntryAnimationsValues>;\n}\n\nexport interface IExitAnimationBuilder {\n  build: () => AnimationConfigFunction<ExitAnimationsValues>;\n}\n\nexport type ProgressAnimationCallback = (\n  viewTag: number,\n  progress: number\n) => void;\n\nexport type ProgressAnimation = (\n  viewTag: number,\n  values: SharedTransitionAnimationsValues,\n  progress: number\n) => void;\n\nexport type CustomProgressAnimation = (\n  values: SharedTransitionAnimationsValues,\n  progress: number\n) => StyleProps;\n\nexport enum SharedTransitionType {\n  ANIMATION = 'animation',\n  PROGRESS_ANIMATION = 'progressAnimation',\n}\n\nexport type EntryExitAnimationsValues =\n  | EntryAnimationsValues\n  | ExitAnimationsValues;\n"],"mappings":"AAyEA,WAAYA,mBAAmB,aAAnBA,mBAAmB;EAAnBA,mBAAmB,CAAnBA,mBAAmB;EAAnBA,mBAAmB,CAAnBA,mBAAmB;EAAnBA,mBAAmB,CAAnBA,mBAAmB;EAAnBA,mBAAmB,CAAnBA,mBAAmB;EAAnBA,mBAAmB,CAAnBA,mBAAmB;EAAA,OAAnBA,mBAAmB;AAAA;AAyE/B,WAAYC,oBAAoB,aAApBA,oBAAoB;EAApBA,oBAAoB;EAApBA,oBAAoB;EAAA,OAApBA,oBAAoB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}