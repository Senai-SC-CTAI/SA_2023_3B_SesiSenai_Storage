{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Environments() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    query = _useState2[0],\n    setQuery = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    results = _useState4[0],\n    setResults = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    noResults = _useState6[0],\n    setNoResults = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    searchError = _useState8[0],\n    setSearchError = _useState8[1];\n  var handleSearch = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.get('/salas');\n        var data = response.data;\n        console.log('Resposta do servidor ao buscar ambientes:', data);\n        if (data.length === 0) {\n          setNoResults(true);\n          setSearchError('');\n        } else {\n          setResults(data);\n          setNoResults(false);\n          setSearchError('');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar ambientes:', error);\n        setSearchError('Erro ao buscar ambientes.');\n      }\n    });\n    return function handleSearch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleButtonClick = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (query.trim() !== '') {\n          var response = yield axios.get(`/salas?query=${query}`);\n          var data = response.data;\n          console.log('Resposta do servidor ao buscar ambientes por query:', data);\n          if (data.length === 0) {\n            setNoResults(true);\n            setSearchError('');\n          } else {\n            setResults(data);\n            setNoResults(false);\n            setSearchError('');\n          }\n        } else {\n          setSearchError('A consulta de pesquisa está vazia. Por favor, insira um termo de pesquisa.');\n          setNoResults(true);\n          setResults([]);\n        }\n      } catch (error) {\n        console.error('Erro ao buscar ambientes por query:', error);\n        setSearchError('Erro ao buscar ambientes por query.');\n      }\n    });\n    return function handleButtonClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleOpenScreen = function handleOpenScreen() {\n    navigation.navigate('Home');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Listagem de Ambientes:\"\n    }), _jsx(View, {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxs(View, {\n        style: styles.inputSearchHolder,\n        children: [_jsx(TextInput, {\n          placeholder: \"Pesquisar por Ambientes\",\n          value: query,\n          onChangeText: function onChangeText(text) {\n            return setQuery(text);\n          },\n          style: {\n            width: '90%',\n            fontStyle: 'italic',\n            color: 'grey'\n          }\n        }), _jsx(TouchableOpacity, {\n          style: {\n            width: 25,\n            height: 25,\n            resizeMode: 'contain',\n            marginLeft: 10\n          },\n          onPress: handleButtonClick,\n          children: _jsx(Image, {\n            source: require(\"../../../assets/search.svg\"),\n            style: {\n              width: '100%',\n              height: '100%'\n            }\n          })\n        })]\n      })\n    }), !!searchError && _jsx(Text, {\n      style: styles.errorMessage,\n      children: searchError\n    }), noResults ? _jsxs(Text, {\n      children: [\"Nenhum ambiente encontrado com o nome \\\"\", query, \"\\\".\"]\n    }) : _jsx(View, {\n      style: styles.searchResults,\n      children: results.map(function (result, index) {\n        return _jsx(Text, {\n          children: result.nome\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleOpenScreen,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Voltar\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","View","TextInput","TouchableOpacity","Text","Image","useNavigation","axios","styles","jsx","_jsx","jsxs","_jsxs","Environments","navigation","_useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","results","setResults","_useState5","_useState6","noResults","setNoResults","_useState7","_useState8","searchError","setSearchError","handleSearch","_ref","_asyncToGenerator","response","get","data","console","log","length","error","apply","arguments","handleButtonClick","_ref2","trim","handleOpenScreen","navigate","style","container","children","title","display","alignItems","justifyContent","inputSearchHolder","placeholder","value","onChangeText","text","width","fontStyle","color","height","resizeMode","marginLeft","onPress","source","require","errorMessage","searchResults","map","result","index","nome","button","buttonText"],"sources":["C:/Users/Lucas Werpp Franco/Documents/Projetos-VScode/SA_2023_3B_SesiSenai_Storage/mobile/src/screens/ScreenEnvironments/index.tsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { View, TextInput, TouchableOpacity, Text, Image } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport axios from 'axios';\r\n\r\nimport styles from './styles';\r\n\r\nexport function Environments() {\r\n  const navigation = useNavigation();\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [noResults, setNoResults] = useState(false);\r\n  const [searchError, setSearchError] = useState('');\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get('/salas'); // Alterado para a rota configurada no proxy\r\n      const data = response.data;\r\n\r\n      console.log('Resposta do servidor ao buscar ambientes:', data);\r\n\r\n      if (data.length === 0) {\r\n        setNoResults(true);\r\n        setSearchError('');\r\n      } else {\r\n        setResults(data);\r\n        setNoResults(false);\r\n        setSearchError('');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao buscar ambientes:', error);\r\n      setSearchError('Erro ao buscar ambientes.');\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async () => {\r\n    try {\r\n      if (query.trim() !== '') {\r\n        const response = await axios.get(`/salas?query=${query}`); // Alterado para a rota configurada no proxy\r\n        const data = response.data;\r\n\r\n        console.log('Resposta do servidor ao buscar ambientes por query:', data);\r\n\r\n        if (data.length === 0) {\r\n          setNoResults(true);\r\n          setSearchError('');\r\n        } else {\r\n          setResults(data);\r\n          setNoResults(false);\r\n          setSearchError('');\r\n        }\r\n      } else {\r\n        setSearchError('A consulta de pesquisa está vazia. Por favor, insira um termo de pesquisa.');\r\n        setNoResults(true);\r\n        setResults([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao buscar ambientes por query:', error);\r\n      setSearchError('Erro ao buscar ambientes por query.');\r\n    }\r\n  };\r\n\r\n  const handleOpenScreen = () => {\r\n    navigation.navigate('Home');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Listagem de Ambientes:</Text>\r\n\r\n      {/* Input search */}\r\n      <View style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n        <View style={styles.inputSearchHolder}>\r\n          <TextInput\r\n            placeholder=\"Pesquisar por Ambientes\"\r\n            value={query}\r\n            onChangeText={(text) => setQuery(text)}\r\n            style={{ width: '90%', fontStyle: 'italic', color: 'grey' }}\r\n          />\r\n          <TouchableOpacity\r\n            style={{ width: 25, height: 25, resizeMode: 'contain', marginLeft: 10 }}\r\n            onPress={handleButtonClick}\r\n          >\r\n            <Image source={require('../../../assets/search.svg')} style={{ width: '100%', height: '100%' }} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {!!searchError && <Text style={styles.errorMessage}>{searchError}</Text>}\r\n\r\n      {noResults ? (\r\n        <Text>Nenhum ambiente encontrado com o nome \"{query}\".</Text>\r\n      ) : (\r\n        <View style={styles.searchResults}>\r\n          {results.map((result, index) => (\r\n            <Text key={index}>{result.nome}</Text>\r\n          ))}\r\n        </View>\r\n      )}\r\n\r\n      <TouchableOpacity style={styles.button} onPress={handleOpenScreen}>\r\n        <Text style={styles.buttonText}>Voltar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}